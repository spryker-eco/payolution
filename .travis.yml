language: php

git:
    depth: 3

env:
    global:
        - APPLICATION_ENV=devtest
        - APPLICATION_STORE=DE
        - PROJECT=suite
        - ARTIFACTS_KEY=AKIAJD43J5ACVDJKUXLA
        - ARTIFACTS_SECRET=$AWS_S3_SECRET_ACCESS_KEY
        - ARTIFACTS_BUCKET=spryker-ci

#Possible travis events (push, pull_request, cron, or api)
matrix:
    fast_finish: true

    allow_failures: []

    include:

        - php: "7.4"
          dist: bionic
          env:
              - VALIDATION=1

        - php: "7.4"
          dist: bionic
          env:
              - TEST_GROUP=acceptance
              - ON_EVENTS=push,cron

        - php: "7.4"
          dist: bionic
          env:
              - TEST_GROUP=without-acceptance
              - ON_EVENTS=cron,push

        - php: "7.2"
          dist: bionic
          env:
              - TEST_GROUP=acceptance
              - ON_EVENTS=push,cron
              - DB=mysql

        - php: "7.2"
          dist: bionic
          env:
              - TEST_GROUP=without-acceptance
              - ON_EVENTS=cron,push
              - DB=mysql

        - name: Docker / PHP 7.3 / PostgreSQL / Functional
          os:
              - linux
          dist: bionic
          language: minimal
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:7.3
              - SPRYKER_DB_ENGINE=PGSQL
              - SPRYKER_TEST_IN_BROWSER=phantomjs
              - TRAVIS=1
          addons:
              hosts:
                  - yves.de.spryker.local
                  - zed.de.spryker.local
                  - glue.de.spryker.local
              apt:
                  packages:
                      - apache2-utils
                      - apt-transport-https
                      - ca-certificates
                      - curl
                      - gnupg-agent
                      - pigz
                      - software-properties-common
                  sources:
                      - sourceline: "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
                        key_url: https://download.docker.com/linux/ubuntu/gpg
          install:
              - echo eyAiZXhwZXJpbWVudGFsIiA6IHRydWUsICJmZWF0dXJlcyIgOiB7ICJidWlsZGtpdCI6IHRydWUgfSB9Cg==|base64 -d|sudo tee /etc/docker/daemon.json
              - sudo apt-get install --only-upgrade docker-ce -y
              - sudo curl -L "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              - sudo chmod +x /usr/local/bin/docker-compose
          script:
              - docker/sdk boot deploy.ci.yml
              - docker/sdk build images
              - docker/sdk demo-data -t
              - 'docker/sdk testing codecept run -c codeception.functional.yml -o "\"extensions: config: \SprykerTest\Shared\Testify\Helper\SuiteFilterHelper: inclusive: [PyzTest]\"" -o "\"extensions: config: \SprykerTest\Shared\Testify\Helper\SuiteFilterHelper: exclusive: [Api, Glue]\""'
          before_install: skip
          before_script: skip
          after_script: skip

        - name: Docker / PHP 7.3 / PostgreSQL / Glue
          os:
              - linux
          dist: bionic
          language: minimal
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:7.3
              - SPRYKER_DB_ENGINE=PGSQL
              - SPRYKER_TEST_IN_BROWSER=phantomjs
              - TRAVIS=1
          addons:
              hosts:
                  - yves.de.spryker.local
                  - zed.de.spryker.local
                  - glue.de.spryker.local
              apt:
                  packages:
                      - apache2-utils
                      - apt-transport-https
                      - ca-certificates
                      - curl
                      - gnupg-agent
                      - pigz
                      - software-properties-common
                  sources:
                      - sourceline: "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
                        key_url: https://download.docker.com/linux/ubuntu/gpg
          install:
              - echo eyAiZXhwZXJpbWVudGFsIiA6IHRydWUsICJmZWF0dXJlcyIgOiB7ICJidWlsZGtpdCI6IHRydWUgfSB9Cg==|base64 -d|sudo tee /etc/docker/daemon.json
              - sudo apt-get install --only-upgrade docker-ce -y
              - sudo curl -L "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              - sudo chmod +x /usr/local/bin/docker-compose
          script:
              - docker/sdk boot deploy.ci.yml
              - docker/sdk build -t images
              - docker/sdk demo-data -t demo-minimal
              - docker/sdk testing codecept fixtures
              - docker/sdk testing console queue:worker:start --stop-when-empty
              - docker/sdk testing codecept run -c codeception.api.yml
          before_install: skip
          before_script: skip
          after_script: skip

        - name: Docker / PHP 7.3 / MySQL / Functional
          os:
              - linux
          dist: bionic
          language: minimal
          env:
              - PROGRESS_TYPE=plain
              - SPRYKER_PLATFORM_IMAGE=spryker/php:7.3
              - SPRYKER_DB_ENGINE=MYSQL
              - SPRYKER_TEST_IN_BROWSER=phantomjs
              - TRAVIS=1
          addons:
              hosts:
                  - yves.de.spryker.local
                  - zed.de.spryker.local
                  - glue.de.spryker.local
              apt:
                  packages:
                      - apache2-utils
                      - apt-transport-https
                      - ca-certificates
                      - curl
                      - gnupg-agent
                      - pigz
                      - software-properties-common
                  sources:
                      - sourceline: "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
                        key_url: https://download.docker.com/linux/ubuntu/gpg
          install:
              - echo eyAiZXhwZXJpbWVudGFsIiA6IHRydWUsICJmZWF0dXJlcyIgOiB7ICJidWlsZGtpdCI6IHRydWUgfSB9Cg==|base64 -d|sudo tee /etc/docker/daemon.json
              - sudo apt-get install --only-upgrade docker-ce -y
              - sudo curl -L "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              - sudo chmod +x /usr/local/bin/docker-compose
          script:
              - docker/sdk boot deploy.ci.yml
              - docker/sdk build images
              - docker/sdk demo-data -t
              - 'docker/sdk testing codecept run -c codeception.functional.yml -o "\"extensions: config: \SprykerTest\Shared\Testify\Helper\SuiteFilterHelper: inclusive: [PyzTest]\"" -o "\"extensions: config: \SprykerTest\Shared\Testify\Helper\SuiteFilterHelper: exclusive: [Api, Glue]\""'
          before_install: skip
          before_script: skip
          after_script: skip

addons:
    apt:
        update: false
        sources:
            - sourceline: ppa:chris-lea/redis-server
            - sourceline: deb http://dl.bintray.com/rabbitmq-erlang/debian bionic erlang
              key_url: https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc
            - sourceline: deb https://dl.bintray.com/rabbitmq/debian bionic main
              key_url: https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc
            - sourceline: ppa:ondrej/php
        packages:
            - redis-tools
            - redis-server
            - rabbitmq-server=3.8.2-1
            - graphviz
            - libzip-dev
    postgresql: 9.6
    mysql: 5.7

    artifacts:
        s3_region: eu-west-1
        paths:
            - $(find ./data/*/logs/*/*.log -not -empty | tr "\n" ":")
            - $(find ./tests/_output/* -not -empty | tr "\n" ":")
            - $(find ./tests/PyzTest/*/*/_output/* -not -empty | tr "\n" ":")
            - $(find ./vendor/spryker/spryker/Bundles/*/tests/_output/* -not -empty | tr "\n" ":")
            - /tmp/phantomjs.log.gz
            - /tmp/yves-error.log
            - /tmp/glue-error.log
            - /tmp/zed-error.log

    hosts:
        - zed.de.spryker.test
        - www.de.spryker.test
        - glue.de.spryker.test

cache:
    directories:
        - $HOME/.composer/cache
        - /home/travis/.rvm/gems # Mailcatcher is a ruby gem, takes 5 minutes to install.
        - /home/travis/.nvm/.cache
        - /tmp/pear/cache/

services:
    - postgresql
    - mysql
    - redis
    - rabbitmq-server

sudo: required

before_install:
    - phpenv config-add config/Shared/ci/travis/travis.php.ini
    - if [[ $VALIDATION != 1 && $ON_EVENTS != *$TRAVIS_EVENT_TYPE* ]] ; then exit ; fi
    - echo "extension = redis.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
    - phpenv config-rm xdebug.ini
    - if [[ $DB == 'mysql' ]] ; then chmod +x ./config/Shared/ci/travis/mysql/* ; fi
    - if [[ $DB == 'mysql' ]] ; then ./config/Shared/ci/travis/mysql/travis_mysql_5.7.sh ; fi
    # Merges travis-ci/stores.php into the general stores.php at the defined "travis hook" line. Uses temporary file during the process.
    # - grabs all lines until the travis hook from stores.php (including that line)
    # - grabs all lines after the 1st line in travis-ci/stores.php (php opening tag)
    # - grabs the remaining lines from stores.php (including the hook line again)
    # - uses temporary file to avoid content loss because of the partial output writing of the operating system
    - ( awk '1;/@hook travis-ci/{exit}' config/Shared/stores.php ; awk 'NR>1' config/Shared/ci/travis/stores.php ; awk '/@hook travis-ci/,0' config/Shared/stores.php ) > config/Shared/stores_tmp.php ; mv config/Shared/stores_tmp.php config/Shared/stores.php

install:
    - chmod -R a+x config/Shared/ci/travis/
    - composer install --optimize-autoloader --no-interaction
    - config/Shared/ci/travis/install_elasticsearch.sh
    - config/Shared/ci/travis/install_mailcatcher.sh

before_script:
    - nvm install 8 > /dev/null

    - mkdir -p shared/data/common/jenkins
    - mkdir -p shared/data/common/jenkins/jobs
    - mkdir -p data/DE/cache/Yves/twig -m 0777
    - mkdir -p data/DE/cache/Zed/twig -m 0777
    - mkdir -p data/DE/logs -m 0777
    - chmod -R 777 data/
    - chmod -R 660 config/Zed/dev_only_private.key
    - chmod -R 660 config/Zed/dev_only_public.key

    - if [[ -z $DB ]] ; then cat config/Shared/ci/travis/postgresql_ci.config >> config/Shared/ci/travis/config_ci.php ; fi
    - if [[ $DB == 'mysql' ]] ; then cat config/Shared/ci/travis/mysql_ci.config >> config/Shared/ci/travis/config_ci.php ; fi

    - cp config/Shared/ci/travis/config_ci.php config/Shared/config_local.php

    - if [[ $DB == 'mysql' ]] ; then sudo cp config/Shared/ci/travis/mysql/my.cnf /etc/ ; fi
    - if [[ $DB == 'mysql' ]] ; then sudo service mysql restart ; fi

    - if [[ $TEST_GROUP == 'acceptance' || $TEST_GROUP == 'without-acceptance' ]] ; then config/Shared/ci/travis/acceptance_env.sh ; fi
    - if [[ $TEST_GROUP == 'acceptance' ]] ; then vendor/bin/install DE -r testing ; fi
    - if [[ $TEST_GROUP == 'without-acceptance' ]] ; then vendor/bin/install DE -r testing -x frontend -x fixtures ; fi

    - if [[ $VALIDATION == 1 ]] ; then vendor/bin/console transfer:generate ; fi
    - if [[ $VALIDATION == 1 ]] ; then vendor/bin/console propel:install ; fi
    - if [[ $VALIDATION == 1 ]] ; then vendor/bin/console dev:ide:generate-auto-completion ; fi
    - if [[ $VALIDATION == 1 ]] ; then vendor/bin/codecept build --ansi ; fi
    - if [[ $VALIDATION == 1 ]] ; then vendor/bin/console transfer:databuilder:generate ; fi
    - if [[ $VALIDATION == 1 ]] ; then vendor/bin/console setup:search ; fi
    - if [[ $VALIDATION == 1 ]] ; then vendor/bin/console frontend:project:install-dependencies ; fi
    - if [[ $VALIDATION == 1 ]] ; then vendor/bin/console frontend:yves:install-dependencies ; fi

script:
    - if [[ $VALIDATION == 1 ]] ; then vendor/bin/phpstan analyze -c phpstan.neon -l 5 src/ ; fi
    - if [[ $VALIDATION == 1 ]] ; then vendor/bin/console code:phpstan -m Spryker.all ; fi
    - if [[ $VALIDATION == 1 ]] ; then vendor/bin/console code:phpstan -m SprykerShop.all ; fi

    - if [[ $VALIDATION == 1 ]] ; then vendor/bin/console dev:composer:replace -d -v ; fi

    - if [[ $VALIDATION == 1 ]] ; then vendor/bin/console code:propel:validate-abstract ; fi
    - if [[ $VALIDATION == 1 ]] ; then vendor/bin/console propel:schema:validate ; fi
    - if [[ $VALIDATION == 1 ]] ; then vendor/bin/console propel:schema:validate-xml-names ; fi
    - if [[ $VALIDATION == 1 ]] ; then vendor/bin/console transfer:validate ; fi

    - if [[ $VALIDATION == 1 ]] ; then vendor/bin/console dev:dependency:find ; fi
    - if [[ $VALIDATION == 1 ]] ; then vendor/bin/console dev:composer:update-json-files -d -v ; fi
    - if [[ $VALIDATION == 1 ]] ; then vendor/bin/console dev:composer:validate-json-files ; fi
    - if [[ $VALIDATION == 1 ]] ; then tests/travis_check_touched_modules.sh ; fi

    - if [[ $VALIDATION == 1 ]] ; then vendor/bin/phpmd src/ text vendor/spryker/spryker/Bundles/Development/src/Spryker/Zed/Development/Business/PhpMd/ruleset.xml ; fi
    - if [[ $VALIDATION == 1 ]] ; then vendor/bin/phpmd src/ text vendor/spryker/architecture-sniffer/src/ruleset.xml --minimumpriority 2 ; fi

    - if [[ $VALIDATION == 1 ]] ; then vendor/bin/console code:sniff:style ; fi

    - if [[ $VALIDATION == 1 ]] ; then ./tests/travis_check_untracked.sh ; fi
    - timeout 45m bash -c "vendor/bin/phantomjs --webdriver=4444 --disk-cache=true --load-images=false --webdriver-logfile=/tmp/phantomjs.log --webdriver-loglevel=DEBUG">/dev/null &
    - if [[ $TEST_GROUP == 'without-acceptance' ]] ; then vendor/bin/codecept run -x EndToEnd -x Presentation --ext DotReporter ; fi
    - if [[ $TEST_GROUP == 'acceptance' ]] ; then vendor/bin/codecept run -g EndToEnd -g Presentation --ext DotReporter ; fi

    - if [[ $VALIDATION == 1 ]] ; then node ./frontend/libs/stylelint ; fi
    - if [[ $VALIDATION == 1 ]] ; then node ./frontend/libs/tslint stylish ; fi

after_script:
    - if [[ $TRAVIS_TEST_RESULT == 0 ]] ; then rm /tmp/phantomjs.log ; fi
    - if [[ $TRAVIS_TEST_RESULT == 1 ]] ; then gzip --best /tmp/phantomjs.log ; fi

notifications:
    email: false
    webhooks:
        - https://release.spryker.com/ci-webhooks/add
